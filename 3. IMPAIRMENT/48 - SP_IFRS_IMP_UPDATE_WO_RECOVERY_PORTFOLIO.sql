---- DROP PROCEDURE SP_IFRS_IMP_UPDATE_WO_RECOVERY_PORTFOLIO;

CREATE OR REPLACE PROCEDURE SP_IFRS_IMP_UPDATE_WO_RECOVERY_PORTFOLIO(
    IN P_RUNID VARCHAR(20) DEFAULT 'S_00000_0000', 
    IN P_DOWNLOAD_DATE DATE DEFAULT NULL,
    IN P_PRC VARCHAR(1) DEFAULT 'S')
LANGUAGE PLPGSQL AS $$
DECLARE
    ---- DATE
    V_PREVDATE DATE;
    V_PREVMONTH DATE;
    V_CURRDATE DATE;
    V_LASTYEAR DATE;
    V_LASTYEARNEXTMONTH DATE;

    ---- QUERY   
    V_STR_QUERY TEXT;

    ---- TABLE LIST       
    V_TABLENAME VARCHAR(100); 
    V_TABLENAME_MON VARCHAR(100);
    V_TABLEINSERT1 VARCHAR(100);
    V_TABLEINSERT2 VARCHAR(100);
    V_TABLEINSERT3 VARCHAR(100);
    V_TABLEINSERT4 VARCHAR(100);
    V_TABLEINSERT5 VARCHAR(100);
    V_TABLEINSERT6 VARCHAR(100);
    V_TABLEINSERT7 VARCHAR(100);

    ---- CONDITION
    V_RETURNROWS INT;
    V_RETURNROWS2 INT;
    V_RETURNROWS3 INT;
    V_RETURNROWS4 INT;
    V_TABLEDEST VARCHAR(100);
    V_COLUMNDEST VARCHAR(100);
    V_SPNAME VARCHAR(100);
    V_OPERATION VARCHAR(100);

    ---- VARIABLE PROCESS
    V_CSPRD_VALUE VARCHAR(100);
    V_EXCEPT_ID VARCHAR(10);
    V_RULE_ID VARCHAR(250);                                             
    V_GROUP_SEGMENT VARCHAR(250);          
    V_SEGMENT VARCHAR(250);          
    V_SUB_SEGMENT VARCHAR(250);          
    V_CONDITION TEXT;
    V_CIF VARCHAR(50);

    ---- RESULT
    V_QUERYS TEXT;

    --- VARIABLE
    V_SP_NAME VARCHAR(100);
    STACK TEXT; 
    FCESIG TEXT;
BEGIN 
    -------- ====== VARIABLE ======
	GET DIAGNOSTICS STACK = PG_CONTEXT;
	FCESIG := substring(STACK from 'function (.*?) line');
	V_SP_NAME := UPPER(LEFT(fcesig::regprocedure::text, POSITION('(' in fcesig::regprocedure::text)-1));

    IF COALESCE(P_PRC, NULL) IS NULL THEN
        P_PRC := 'S';
    END IF;

    IF COALESCE(P_RUNID, NULL) IS NULL THEN
        P_RUNID := 'S_00000_0000';
    END IF;

    IF P_PRC = 'S' THEN 
        V_TABLENAME := 'TMP_IMA_' || P_RUNID || '';
        V_TABLENAME_MON := 'TMP_IMAM_' || P_RUNID || '';
        V_TABLEINSERT1 := 'TMP_IFRS_ECL_IMA_' || P_RUNID || '';
        V_TABLEINSERT2 := 'IFRS_IMA_IMP_CURR_' || P_RUNID || '';
        V_TABLEINSERT3 := 'IFRS_IMA_IMP_PREV_' || P_RUNID || '';
        V_TABLEINSERT4 := 'IFRS_MASTER_WO_RECOVERY_' || P_RUNID || '';
        V_TABLEINSERT5 := 'IFRS_MASTER_WO_' || P_RUNID || '';
    ELSE 
        V_TABLENAME := 'IFRS_MASTER_ACCOUNT';
        V_TABLENAME_MON := 'IFRS_MASTER_ACCOUNT_MONTHLY';
        V_TABLEINSERT1 := 'TMP_IFRS_ECL_IMA';
        V_TABLEINSERT2 := 'IFRS_IMA_IMP_CURR';
        V_TABLEINSERT3 := 'IFRS_IMA_IMP_PREV';
        V_TABLEINSERT4 := 'IFRS_MASTER_WO_RECOVERY';
        V_TABLEINSERT5 := 'IFRS_MASTER_WO';
    END IF;

    IF P_DOWNLOAD_DATE IS NULL 
    THEN
        SELECT
            CURRDATE INTO V_CURRDATE
        FROM
            IFRS_PRC_DATE;
    ELSE        
        V_CURRDATE := P_DOWNLOAD_DATE;
    END IF;
    
    V_PREVMONTH := F_EOMONTH(V_CURRDATE, 1, 'M', 'PREV');
    V_LASTYEAR := F_EOMONTH(V_CURRDATE, 1, 'Y', 'PREV');
    V_LASTYEARNEXTMONTH := F_EOMONTH(V_LASTYEAR, 1, 'M', 'NEXT');
    
    V_RETURNROWS2 := 0;
    V_RETURNROWS4 := 0;
    V_EXCEPT_ID := 888;
    -------- ====== VARIABLE ======

    -------- ====== PRE SIMULATION TABLE ======
    IF P_PRC = 'S' THEN
        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'DROP TABLE IF EXISTS ' || V_TABLEINSERT4 || ' ';
        EXECUTE (V_STR_QUERY);

        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEINSERT4 || ' AS SELECT * FROM IFRS_MASTER_WO_RECOVERY 
        WHERE DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE';
        EXECUTE (V_STR_QUERY);

        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'DROP TABLE IF EXISTS ' || V_TABLEINSERT5 || ' ';
        EXECUTE (V_STR_QUERY);

        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEINSERT5 || ' AS SELECT * FROM IFRS_MASTER_WO 
        WHERE DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE';
        EXECUTE (V_STR_QUERY);
    END IF;
    -------- ====== PRE SIMULATION TABLE ======
    
    -------- ====== BODY ======
    SELECT VALUE1 INTO V_CSPRD_VALUE FROM TBLM_COMMONCODEDETAIL WHERE COMMONCODE = 'PRD_TYPE_CS'; 

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'DROP TABLE IF EXISTS TBLU_CUST_GRADE_' || P_RUNID || '';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE TBLU_CUST_GRADE_' || P_RUNID || ' AS 
    SELECT DISTINCT CUSTOMER_NUMBER FROM TBLU_CUSTOMER_GRADING     
    WHERE DOWNLOAD_DATE::DATE <= ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'DROP TABLE IF EXISTS IMA_CS_' || P_RUNID || '';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE IMA_CS_' || P_RUNID || ' AS 
    SELECT CUSTOMER_NUMBER, SEGMENT_FLAG FROM ' || V_TABLENAME || '        
    WHERE DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE    
    AND SEGMENT_FLAG <> ''N/A''  ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'UPDATE ' || V_TABLEINSERT5 || ' A        
    SET SEGMENT_FLAG = COALESCE(B.SEGMENT_FLAG,''N/A'')           
    FROM IMA_CS_' || P_RUNID || ' B 
    WHERE A.CUSTOMER_NUMBER = B.CUSTOMER_NUMBER       
    AND A.DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE      
    AND A.PRODUCT_TYPE IN (''' || REPLACE(V_CSPRD_VALUE, ',', ''',''') || ''')';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'UPDATE ' || V_TABLEINSERT4 || ' A        
    SET SEGMENT_FLAG = COALESCE(B.SEGMENT_FLAG,''N/A'')                  
    FROM IMA_CS_' || P_RUNID || ' B 
    WHERE A.CUSTOMER_NUMBER = B.CUSTOMER_NUMBER       
    AND A.DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE      
    AND A.PRODUCT_TYPE IN (''' || REPLACE(V_CSPRD_VALUE, ',', ''',''') || ''')';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';             
    V_STR_QUERY :=  V_STR_QUERY  || 'UPDATE ' || V_TABLEINSERT4 || ' A          
    SET SUB_SEGMENT = NULL, SEGMENT = NULL, GROUP_SEGMENT = NULL          
    WHERE A.DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE';        
    EXECUTE (V_STR_QUERY);         
       
    V_STR_QUERY := '';             
    V_STR_QUERY :=  V_STR_QUERY  || 'UPDATE ' || V_TABLEINSERT5 || ' A          
    SET SUB_SEGMENT = NULL, SEGMENT = NULL, GROUP_SEGMENT = NULL          
    WHERE A.DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE';        
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || ' DELETE FROM IFRS_EXCEPTION_ACCOUNT 
    WHERE EXCEPTION_ID = ' || V_EXCEPT_ID || ' 
    AND DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    FOR V_RULE_ID, V_GROUP_SEGMENT, V_SEGMENT, V_SUB_SEGMENT, V_CONDITION IN
    EXECUTE 'SELECT DISTINCT          
    RULE_ID,          
    GROUP_SEGMENT,      
    SEGMENT,          
    SUB_SEGMENT,          
    CONDITION          
    FROM IFRS_SCENARIO_SEGMENT_GENERATE_QUERY          
    WHERE SEGMENT_TYPE = ''PORTFOLIO_SEGMENT'' AND GROUP_SEGMENT NOT IN (''CORPORATE'', ''TREASURY'') AND SEGMENT NOT IN (''MB - TRADE'')'
    LOOP
        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'UPDATE ' || V_TABLEINSERT4 || ' A 
        SET SUB_SEGMENT = ''' || V_SUB_SEGMENT || ''', SEGMENT = ''' || V_SEGMENT || ''', GROUP_SEGMENT = ''' || V_GROUP_SEGMENT || '''       
        WHERE (' || REPLACE(V_CONDITION,'"','') || ') AND DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE';                                          
        EXECUTE (V_STR_QUERY);

        GET DIAGNOSTICS V_RETURNROWS = ROW_COUNT;
        V_RETURNROWS2 := V_RETURNROWS2 + V_RETURNROWS;
        V_RETURNROWS := 0;   

        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'UPDATE ' || V_TABLEINSERT5 || ' A 
        SET SUB_SEGMENT = ''' || V_SUB_SEGMENT || ''', SEGMENT = ''' || V_SEGMENT || ''', GROUP_SEGMENT = ''' || V_GROUP_SEGMENT || '''        
        WHERE (' || REPLACE(V_CONDITION,'"','') || ') AND DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE';                                          
        EXECUTE (V_STR_QUERY);

        GET DIAGNOSTICS V_RETURNROWS3 = ROW_COUNT;
        V_RETURNROWS4 := V_RETURNROWS4 + V_RETURNROWS3;
        V_RETURNROWS3 := 0;
        
    END LOOP;

    RAISE NOTICE 'SP_IFRS_IMP_UPDATE_WO_RECOVERY_PORTFOLIO | AFFECTED RECORD : %', V_RETURNROWS4;
    -------- ====== BODY ======

    -------- ====== LOG ======
    -- V_TABLEDEST = V_TABLEINSERT4;
    -- V_COLUMNDEST = '-';
    -- V_SPNAME = 'SP_IFRS_IMP_UPDATE_WO_RECOVERY_PORTFOLIO';
    -- V_OPERATION = 'INSERT';
    
    -- CALL SP_IFRS_EXEC_AND_LOG(V_CURRDATE, V_TABLEDEST, V_COLUMNDEST, V_SPNAME, V_OPERATION, V_RETURNROWS2, P_RUNID);

    V_TABLEDEST = V_TABLEINSERT5;
    V_COLUMNDEST = '-';
    V_SPNAME = 'SP_IFRS_IMP_UPDATE_WO_RECOVERY_PORTFOLIO';
    V_OPERATION = 'INSERT';
    
    CALL SP_IFRS_EXEC_AND_LOG(V_CURRDATE, V_TABLEDEST, V_COLUMNDEST, V_SPNAME, V_OPERATION, V_RETURNROWS4, P_RUNID);
    -------- ====== LOG ======

    -------- ====== RESULT ======
    V_QUERYS = 'SELECT * FROM ' || V_TABLEINSERT5 || '';
    CALL SP_IFRS_RESULT_PREV(V_CURRDATE, V_QUERYS, V_SPNAME, V_RETURNROWS4, P_RUNID);
    -------- ====== RESULT ======

END;

$$;
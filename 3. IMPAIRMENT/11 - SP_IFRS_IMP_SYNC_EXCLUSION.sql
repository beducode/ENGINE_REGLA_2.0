---- DROP PROCEDURE SP_IFRS_IMP_SYNC_EXCLUSION;

CREATE OR REPLACE PROCEDURE SP_IFRS_IMP_SYNC_EXCLUSION(
    IN P_RUNID VARCHAR(20) DEFAULT 'S_00000_0000',
    IN P_DOWNLOAD_DATE DATE DEFAULT NULL,
    IN P_PRC VARCHAR(1) DEFAULT 'S')
LANGUAGE PLPGSQL AS $$
DECLARE
    ---- DATE
    V_PREVDATE DATE;
    V_PREVMONTH DATE;
    V_CURRDATE DATE;

    ---- QUERY   
    V_STR_QUERY TEXT;

    ---- TABLE LIST       
    V_TABLENAME VARCHAR(100);
    V_TABLEINSERT1 VARCHAR(100);
    V_TABLEINSERT2 VARCHAR(100);

    ---- VARIABLE PROCESS
    V_EX_COUNT INT;
    
    ---- CONDITION
    V_RETURNROWS INT;
    V_RETURNROWS2 INT;
    V_TABLEDEST VARCHAR(100);
    V_COLUMNDEST VARCHAR(100);
    V_SPNAME VARCHAR(100);
    V_OPERATION VARCHAR(100);

    ---- RESULT
    V_QUERYS TEXT;

    --- VARIABLE
    V_SP_NAME VARCHAR(100);
    STACK TEXT; 
    FCESIG TEXT;
BEGIN 
    -------- ====== VARIABLE ======
	GET DIAGNOSTICS STACK = PG_CONTEXT;
	FCESIG := substring(STACK from 'function (.*?) line');
	V_SP_NAME := UPPER(LEFT(fcesig::regprocedure::text, POSITION('(' in fcesig::regprocedure::text)-1));

    IF COALESCE(P_PRC, NULL) IS NULL THEN
        P_PRC := 'S';
    END IF;

    IF COALESCE(P_RUNID, NULL) IS NULL THEN
        P_RUNID := 'S_00000_0000';
    END IF;

    IF P_PRC = 'S' THEN 
        V_TABLENAME := 'TMP_IMA_' || P_RUNID || '';
        V_TABLEINSERT1 := 'TBLU_EXCLUSION_' || P_RUNID || '';
        V_TABLEINSERT2 := 'IFRS_ECL_EXCLUSION_' || P_RUNID || '';
    ELSE 
        V_TABLENAME := 'IFRS_MASTER_ACCOUNT';
        V_TABLEINSERT1 := 'TBLU_EXCLUSION';
        V_TABLEINSERT2 := 'IFRS_ECL_EXCLUSION';
    END IF;
    
    IF P_DOWNLOAD_DATE IS NULL 
    THEN
        SELECT
            CURRDATE, PREVDATE INTO V_CURRDATE, V_PREVDATE
        FROM
            IFRS_PRC_DATE;
    ELSE        
        V_CURRDATE := P_DOWNLOAD_DATE;
        V_PREVDATE := V_CURRDATE - INTERVAL '1 DAY';
    END IF;

    V_PREVMONTH := F_EOMONTH(V_CURRDATE, 1, 'M', 'PREV');
    
    V_EX_COUNT := 0;
    V_RETURNROWS2 := 0;
    -------- ====== VARIABLE ======

    -------- RECORD RUN_ID --------
    CALL SP_IFRS_RUNNING_LOG(V_CURRDATE, V_SP_NAME, P_RUNID, PG_BACKEND_PID(), CURRENT_DATE);
    -------- RECORD RUN_ID --------

    -------- ====== PRE SIMULATION TABLE ======
    IF P_PRC = 'S' THEN
        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'DROP TABLE IF EXISTS ' || V_TABLEINSERT1 || ' ';
        EXECUTE (V_STR_QUERY);

        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEINSERT1 || ' AS SELECT * FROM TBLU_EXCLUSION WHERE 1=0 ';
        EXECUTE (V_STR_QUERY);

        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'DROP TABLE IF EXISTS ' || V_TABLEINSERT2 || ' ';
        EXECUTE (V_STR_QUERY);

        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEINSERT2 || ' AS SELECT * FROM IFRS_ECL_EXCLUSION WHERE 1=0 ';
        EXECUTE (V_STR_QUERY);
    END IF;
    -------- ====== PRE SIMULATION TABLE ======

    -------- ====== BODY ======
    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'DELETE FROM ' || V_TABLEINSERT1 || ' WHERE CAST(DOWNLOAD_DATE AS VARCHAR(10))::DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || V_TABLEINSERT1 || ' 
        (
            DOWNLOAD_DATE 
            ,CUSTOMER_NUMBER 
            ,ACCOUNT_NUMBER 
            ,PRODUCT_CODE 
            ,CREATEDBY 
            ,CREATEDDATE 
            ,CREATEDHOST 
            ,EXCLUSION_PERCENTAGE 
        ) 
        SELECT DOWNLOAD_DATE, CUSTOMER_NUMBER, ACCOUNT_NUMBER, PRODUCT_CODE, CREATEDBY, CREATEDDATE, CREATEDHOST, EXCLUSION_PERCENTAGE 
        FROM TBLU_EXCLUSION_PUR 
        WHERE CAST(DOWNLOAD_DATE AS VARCHAR(10))::DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE 
        UNION ALL 
        SELECT DOWNLOAD_DATE, CUSTOMER_NUMBER, ACCOUNT_NUMBER, PRODUCT_CODE, CREATEDBY, CREATEDDATE, CREATEDHOST, EXCLUSION_PERCENTAGE 
        FROM TBLU_EXCLUSION_MB 
        WHERE CAST(DOWNLOAD_DATE AS VARCHAR(10))::DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE 
        UNION ALL 
        SELECT DOWNLOAD_DATE, CUSTOMER_NUMBER, ACCOUNT_NUMBER, PRODUCT_CODE, CREATEDBY, CREATEDDATE, CREATEDHOST, EXCLUSION_PERCENTAGE 
        FROM TBLU_EXCLUSION_MUR 
        WHERE CAST(DOWNLOAD_DATE AS VARCHAR(10))::DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE 
        UNION ALL 
        SELECT DOWNLOAD_DATE, CUSTOMER_NUMBER, ACCOUNT_NUMBER, PRODUCT_CODE, CREATEDBY, CREATEDDATE, CREATEDHOST, EXCLUSION_PERCENTAGE 
        FROM TBLU_EXCLUSION_JENIUS 
        WHERE CAST(DOWNLOAD_DATE AS VARCHAR(10))::DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'DELETE FROM ' || V_TABLEINSERT2 || ' WHERE DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'SELECT COUNT(1) 
        FROM ' || V_TABLEINSERT1 || '  
        WHERE CASE 
            WHEN LENGTH(DOWNLOAD_DATE) < 8 THEN F_EOMONTH(CAST(CONCAT(DOWNLOAD_DATE, ''01'') AS DATE)::DATE, 0, '''', '''') 
            ELSE F_EOMONTH(CAST(DOWNLOAD_DATE AS DATE)::DATE, 0, '''', '''') 
        END = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY) INTO V_EX_COUNT;

    IF V_EX_COUNT > 0 THEN 
        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || V_TABLEINSERT2 || ' 
            (
                DOWNLOAD_DATE 
                ,MASTERID 
                ,CUSTOMER_NUMBER 
                ,ACCOUNT_NUMBER 
                ,PRODUCT_CODE 
                ,CREATEDBY 
                ,CREATEDDATE 
                ,CREATEDHOST 
                ,EXCLUSION_PERCENTAGE 
            ) SELECT 
                CASE 
                    WHEN LENGTH(DOWNLOAD_DATE) < 8 THEN F_EOMONTH(CAST(CONCAT(DOWNLOAD_DATE, ''01'') AS DATE)::DATE, 0, '''', '''') 
                    ELSE F_EOMONTH(CAST(DOWNLOAD_DATE AS DATE)::DATE, 0, '''', '''') 
                END AS DOWNLOAD_DATE 
                ,CONCAT(CUSTOMER_NUMBER, ''_'', ACCOUNT_NUMBER, ''_'', PRODUCT_CODE) AS MASTERID 
                ,CUSTOMER_NUMBER 
                ,ACCOUNT_NUMBER 
                ,PRODUCT_CODE 
                ,CREATEDBY 
                ,CREATEDDATE 
                ,CREATEDHOST 
                ,COALESCE(EXCLUSION_PERCENTAGE, ''100'') AS EXCLUSION_PERCENTAGE 
            FROM ' || V_TABLEINSERT1 || '  
            WHERE CASE 
                WHEN LENGTH(DOWNLOAD_DATE) < 8 THEN F_EOMONTH(CAST(CONCAT(DOWNLOAD_DATE, ''01'') AS DATE)::DATE, 0, '''', '''') 
                ELSE F_EOMONTH(CAST(DOWNLOAD_DATE AS DATE)::DATE, 0, '''', '''') 
            END = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
        EXECUTE (V_STR_QUERY);

        GET DIAGNOSTICS V_RETURNROWS = ROW_COUNT;
        V_RETURNROWS2 := V_RETURNROWS2 + V_RETURNROWS;
        V_RETURNROWS := 0;
    ELSE 
        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || V_TABLEINSERT2 || ' 
            (
                DOWNLOAD_DATE 
                ,MASTERID 
                ,CUSTOMER_NUMBER 
                ,ACCOUNT_NUMBER 
                ,PRODUCT_CODE 
                ,CREATEDBY 
                ,CREATEDDATE 
                ,CREATEDHOST 
                ,EXCLUSION_PERCENTAGE 
            ) SELECT 
                ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE AS DOWNLOAD_DATE 
                ,MASTERID 
                ,CUSTOMER_NUMBER 
                ,ACCOUNT_NUMBER 
                ,PRODUCT_CODE 
                ,CREATEDBY 
                ,CREATEDDATE 
                ,CREATEDHOST 
                ,COALESCE(EXCLUSION_PERCENTAGE, ''100'') AS EXCLUSION_PERCENTAGE 
            FROM ' || V_TABLEINSERT2 || '  
            WHERE DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE ';
        EXECUTE (V_STR_QUERY);

        GET DIAGNOSTICS V_RETURNROWS = ROW_COUNT;
        V_RETURNROWS2 := V_RETURNROWS2 + V_RETURNROWS;
        V_RETURNROWS := 0;
    END IF;

    RAISE NOTICE 'SP_IFRS_IMP_SYNC_EXCLUSION | AFFECTED RECORD : %', V_RETURNROWS2;
    ---------- ====== BODY ======

    -------- ====== LOG ======
    V_TABLEDEST = V_TABLEINSERT2;
    V_COLUMNDEST = '-';
    V_SPNAME = 'SP_IFRS_IMP_SYNC_EXCLUSION';
    V_OPERATION = 'INSERT';
    
    CALL SP_IFRS_EXEC_AND_LOG(V_CURRDATE, V_TABLEDEST, V_COLUMNDEST, V_SPNAME, V_OPERATION, V_RETURNROWS2, P_RUNID);
    -------- ====== LOG ======

    -------- ====== RESULT ======
    V_QUERYS = 'SELECT * FROM ' || V_TABLEINSERT2 || '';
    CALL SP_IFRS_RESULT_PREV(V_CURRDATE, V_QUERYS, V_SPNAME, V_RETURNROWS2, P_RUNID);
    -------- ====== RESULT ======

    CALL SP_IFRS_IMP_SYNC_RESTRU_COVID(P_RUNID, V_CURRDATE, P_PRC);

END;

$$;
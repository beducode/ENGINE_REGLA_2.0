CREATE OR REPLACE  SP_IFRS_RESET_AMT_PRC(IN P_RUNID CHARACTER VARYING DEFAULT 'S_00000_0000'::CHARACTER VARYING, IN P_DOWNLOAD_DATE DATE DEFAULT NULL::DATE, IN P_PRC CHARACTER VARYING DEFAULT 'S'::CHARACTER VARYING)
LANGUAGE PLPGSQL
AS $$
DECLARE
    ---- DATE
    V_PREVDATE DATE;
    V_CURRDATE DATE;

    ---- QUERY   
    V_STR_QUERY TEXT;

    ---- TABLE LIST       
    V_TABLEUPDATE1 VARCHAR(100);
    V_TABLEUPDATE2 VARCHAR(100);
    V_TABLEUPDATE3 VARCHAR(100);
    V_TABLEUPDATE4 VARCHAR(100);
    V_TABLEUPDATE5 VARCHAR(100);
    V_TABLEUPDATE6 VARCHAR(100);
    V_TABLEUPDATE7 VARCHAR(100);
    V_TABLEUPDATE8 VARCHAR(100);
    V_TABLEUPDATE9 VARCHAR(100);
    V_TABLEUPDATE10 VARCHAR(100);
    V_TABLEUPDATE11 VARCHAR(100);
    V_TABLEUPDATE12 VARCHAR(100);

    --- VARIABLE
    V_SP_NAME VARCHAR(100);
    STACK TEXT; 
    FCESIG TEXT;
BEGIN 
    -------- ====== VARIABLE ======
	GET DIAGNOSTICS STACK = PG_CONTEXT;
	FCESIG := SUBSTRING(STACK FROM 'FUNCTION (.*?) LINE');
	V_SP_NAME := UPPER(LEFT(FCESIG::REG::TEXT, POSITION('(' IN FCESIG::REG::TEXT)-1));

    IF COALESCE(P_PRC, NULL) IS NULL THEN
        P_PRC := 'S';
    END IF;

    IF COALESCE(P_RUNID, NULL) IS NULL THEN
        P_RUNID := 'S_00000_0000';
    END IF;

    IF P_PRC = 'S' THEN 
        V_TABLEUPDATE1 := 'IFRS_ACCT_SL_ECF_' || P_RUNID || '';
        V_TABLEUPDATE2 := 'IFRS_ACCT_EIR_ECF_' || P_RUNID || '';
        V_TABLEUPDATE3 := 'IFRS_ACCT_SL_ACCRU_PREV_' || P_RUNID || '';
        V_TABLEUPDATE4 := 'IFRS_ACCT_EIR_ACCRU_PREV_' || P_RUNID || '';
        V_TABLEUPDATE5 := 'IFRS_ACCT_SL_ACF_' || P_RUNID || '';
        V_TABLEUPDATE6 := 'IFRS_ACCT_EIR_ACF_' || P_RUNID || '';
        V_TABLEUPDATE7 := 'IFRS_ACCT_SL_COST_FEE_ECF_' || P_RUNID || '';
        V_TABLEUPDATE8 := 'IFRS_ACCT_EIR_COST_FEE_ECF_' || P_RUNID || '';
        V_TABLEUPDATE9 := 'IFRS_ACCT_SL_COST_FEE_PREV_' || P_RUNID || '';
        V_TABLEUPDATE10 := 'IFRS_ACCT_EIR_COST_FEE_PREV_' || P_RUNID || '';
        V_TABLEUPDATE11 := 'IFRS_ACCT_COST_FEE_' || P_RUNID || '';
        V_TABLEUPDATE12 := 'IFRS_ACCT_JOURNAL_INTM_' || P_RUNID || '';
    ELSE 
        V_TABLEUPDATE1 := 'IFRS_ACCT_SL_ECF';
        V_TABLEUPDATE2 := 'IFRS_ACCT_EIR_ECF';
        V_TABLEUPDATE3 := 'IFRS_ACCT_SL_ACCRU_PREV';
        V_TABLEUPDATE4 := 'IFRS_ACCT_EIR_ACCRU_PREV';
        V_TABLEUPDATE5 := 'IFRS_ACCT_SL_ACF';
        V_TABLEUPDATE6 := 'IFRS_ACCT_EIR_ACF';
        V_TABLEUPDATE7 := 'IFRS_ACCT_SL_COST_FEE_ECF';
        V_TABLEUPDATE8 := 'IFRS_ACCT_EIR_COST_FEE_ECF';
        V_TABLEUPDATE9 := 'IFRS_ACCT_SL_COST_FEE_PREV';
        V_TABLEUPDATE10 := 'IFRS_ACCT_EIR_COST_FEE_PREV';
        V_TABLEUPDATE11 := 'IFRS_ACCT_COST_FEE';
        V_TABLEUPDATE12 := 'IFRS_ACCT_JOURNAL_INTM';
    END IF;
    
    IF P_DOWNLOAD_DATE IS NULL 
    THEN
        SELECT
            CURRDATE, PREVDATE INTO V_CURRDATE, V_PREVDATE
        FROM
            IFRS_PRC_DATE;
    ELSE        
        V_CURRDATE := P_DOWNLOAD_DATE;
        V_PREVDATE := V_CURRDATE - INTERVAL '1 DAY';
    END IF;
    -------- ====== VARIABLE ======

    -------- ====== PRE SIMULATION TABLE ======
    IF P_PRC = 'S' THEN
        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'DROP TABLE IF EXISTS ' || V_TABLEUPDATE1 || ', ' || V_TABLEUPDATE2 || ', ' || V_TABLEUPDATE3 || ', ' || V_TABLEUPDATE4 || ', ' || V_TABLEUPDATE5 || ', ' || V_TABLEUPDATE6 || ', ' || V_TABLEUPDATE7 || ', ' || V_TABLEUPDATE8 || ', ' || V_TABLEUPDATE9 || ', ' || V_TABLEUPDATE10 || ', ' || V_TABLEUPDATE11 || ', ' || V_TABLEUPDATE12 || ' ';
        EXECUTE (V_STR_QUERY);

        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE1 || ' AS SELECT * FROM IFRS_ACCT_SL_ECF WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE2 || ' AS SELECT * FROM IFRS_ACCT_EIR_ECF WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE3 || ' AS SELECT * FROM IFRS_ACCT_SL_ACCRU_PREV WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE4 || ' AS SELECT * FROM IFRS_ACCT_EIR_ACCRU_PREV WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE5 || ' AS SELECT * FROM IFRS_ACCT_SL_ACF WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE6 || ' AS SELECT * FROM IFRS_ACCT_EIR_ACF WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE7 || ' AS SELECT * FROM IFRS_ACCT_SL_COST_FEE_ECF WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE8 || ' AS SELECT * FROM IFRS_ACCT_EIR_COST_FEE_ECF WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE9 || ' AS SELECT * FROM IFRS_ACCT_SL_COST_FEE_PREV WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE10 || ' AS SELECT * FROM IFRS_ACCT_EIR_COST_FEE_PREV WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE11 || ' AS SELECT * FROM IFRS_ACCT_COST_FEE WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE12 || ' AS SELECT * FROM IFRS_ACCT_JOURNAL_INTM WHERE 1=0; ';
        EXECUTE (V_STR_QUERY);
    END IF;
    -------- ====== PRE SIMULATION TABLE ======

    -------- ====== BODY ======
    ---- DELETE ECF
    CALL SP_IFRS_LOG_AMORT(V_CURRDATE, 'DELETE ECF', V_SP_NAME, '');

    V_STR_QUERY := 'DELETE FROM ' || V_TABLEUPDATE1 || ' WHERE DOWNLOAD_DATE >= ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'DELETE FROM ' || V_TABLEUPDATE2 || ' WHERE DOWNLOAD_DATE >= ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    ---- UPDATE ECF
    CALL SP_IFRS_LOG_AMORT(V_CURRDATE, 'UPDATE ECF', V_SP_NAME, '');

    V_STR_QUERY := 'UPDATE ' || V_TABLEUPDATE1 || ' 
        SET AMORTSTOPDATE = NULL 
            ,AMORTSTOPREASON = NULL 
        WHERE AMORTSTOPDATE >= ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'UPDATE ' || V_TABLEUPDATE2 || ' 
        SET AMORTSTOPDATE = NULL 
            ,AMORTSTOPMSG = NULL 
        WHERE AMORTSTOPDATE >= ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    ---- DELETE ACCRU PREV
    CALL SP_IFRS_LOG_AMORT(V_CURRDATE, 'DELETE ACCRU PREV', V_SP_NAME, '');

    V_STR_QUERY := 'DELETE FROM ' || V_TABLEUPDATE3 || ' WHERE DOWNLOAD_DATE >= ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'DELETE FROM ' || V_TABLEUPDATE4 || ' WHERE DOWNLOAD_DATE >= ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    ---- DELETE ACF
    CALL SP_IFRS_LOG_AMORT(V_CURRDATE, 'DELETE ACF', V_SP_NAME, '');

    V_STR_QUERY := 'DELETE FROM ' || V_TABLEUPDATE5 || ' WHERE DOWNLOAD_DATE >= ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'DELETE FROM ' || V_TABLEUPDATE6 || ' WHERE DOWNLOAD_DATE >= ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    ---- DELETE COST FEE ECF
    CALL SP_IFRS_LOG_AMORT(V_CURRDATE, 'DELETE COST FEE ECF', V_SP_NAME, '');

    V_STR_QUERY := 'DELETE FROM ' || V_TABLEUPDATE7 || ' WHERE DOWNLOAD_DATE >= ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'DELETE FROM ' || V_TABLEUPDATE8 || ' WHERE DOWNLOAD_DATE >= ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    ---- DELETE COST FEE PREV
    CALL SP_IFRS_LOG_AMORT(V_CURRDATE, 'DELETE COST FEE PREV', V_SP_NAME, '');

    V_STR_QUERY := 'DELETE FROM ' || V_TABLEUPDATE9 || ' WHERE DOWNLOAD_DATE >= ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'DELETE FROM ' || V_TABLEUPDATE11 || ' WHERE DOWNLOAD_DATE >= ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    ---- UPDATE ACCRU PREV
    CALL SP_IFRS_LOG_AMORT(V_CURRDATE, 'UPDATE ACCRU PREV', V_SP_NAME, '');

    V_STR_QUERY := 'UPDATE ' || V_TABLEUPDATE3 || ' 
        SET STATUS = ''ACT'' 
        WHERE DOWNLOAD_DATE >= ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE 
        AND STATUS != ''ACT'' ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'UPDATE ' || V_TABLEUPDATE4 || ' 
        SET STATUS = ''ACT'' 
        WHERE DOWNLOAD_DATE >= ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE 
        AND STATUS != ''ACT'' ';
    EXECUTE (V_STR_QUERY);

    ---- DELETE ACCT COST FEE
    CALL SP_IFRS_LOG_AMORT(V_CURRDATE, 'DELETE ACCT COST FEE', V_SP_NAME, '');

    V_STR_QUERY := 'DELETE FROM ' || V_TABLEUPDATE10 || ' WHERE DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE AND SRCPROCESS = ''SL_TO_EIR'' ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'DELETE FROM ' || V_TABLEUPDATE11 || ' WHERE DOWNLOAD_DATE >= ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    ---- END
    CALL SP_IFRS_LOG_AMORT(V_CURRDATE, 'END', V_SP_NAME, '');
    ---------- ====== BODY ======

END;

$$

CREATE OR REPLACE SP_IFRS_ACCT_SL_UPD_UNAMRT(IN P_RUNID CHARACTER VARYING DEFAULT 'S_00000_0000'::CHARACTER VARYING, IN P_DOWNLOAD_DATE DATE DEFAULT NULL::DATE, IN P_PRC CHARACTER VARYING DEFAULT 'S'::CHARACTER VARYING)
 LANGUAGE PLPGSQL
AS $$
DECLARE
    ---- DATE
    V_PREVDATE DATE;
    V_CURRDATE DATE;

    ---- QUERY   
    V_STR_QUERY TEXT;

    ---- TABLE LIST  
    V_TABLENAME VARCHAR(100);     
    V_TABLEINSERT1 VARCHAR(100);
    V_TABLEINSERT2 VARCHAR(100);
    V_TABLEINSERT3 VARCHAR(100);

    ---- VARIABLE PROCESS
    V_ROUND INT;
    V_FUNCROUND INT;
    
    ---- CONDITION
    V_RETURNROWS INT;
    V_RETURNROWS2 INT;
    V_TABLEDEST VARCHAR(100);
    V_COLUMNDEST VARCHAR(100);
    V_SPNAME VARCHAR(100);
    V_OPERATION VARCHAR(100);

    ---- RESULT
    V_QUERYS TEXT;

    --- VARIABLE
    V_SP_NAME VARCHAR(100);
    STACK TEXT; 
    FCESIG TEXT;
BEGIN 
    -------- ====== VARIABLE ======
	GET DIAGNOSTICS STACK = PG_CONTEXT;
	FCESIG := SUBSTRING(STACK FROM 'FUNCTION (.*?) LINE');
	V_SP_NAME := UPPER(LEFT(FCESIG::REG::TEXT, POSITION('(' IN FCESIG::REG::TEXT)-1));

    IF COALESCE(P_PRC, NULL) IS NULL THEN
        P_PRC := 'S';
    END IF;

    IF COALESCE(P_RUNID, NULL) IS NULL THEN
        P_RUNID := 'S_00000_0000';
    END IF;

    IF P_PRC = 'S' THEN 
        V_TABLENAME := 'TMP_IMA_' || P_RUNID || '';
        V_TABLEINSERT1 := 'IFRS_ACCT_SL_ACF_' || P_RUNID || '';
        V_TABLEINSERT2 := 'IFRS_ACCT_SL_ECF_' || P_RUNID || '';
        V_TABLEINSERT3 := 'IFRS_IMA_AMORT_CURR_' || P_RUNID || '';
    ELSE 
        V_TABLENAME := 'IFRS_MASTER_ACCOUNT';
        V_TABLEINSERT1 := 'IFRS_ACCT_SL_ACF';
        V_TABLEINSERT2 := 'IFRS_ACCT_SL_ECF';
        V_TABLEINSERT3 := 'IFRS_IMA_AMORT_CURR';
    END IF;
    
    IF P_DOWNLOAD_DATE IS NULL 
    THEN
        SELECT
            CURRDATE, PREVDATE INTO V_CURRDATE, V_PREVDATE
        FROM
            IFRS_PRC_DATE;
    ELSE        
        V_CURRDATE := P_DOWNLOAD_DATE;
        V_PREVDATE := V_CURRDATE - INTERVAL '1 DAY';
    END IF;

    SELECT CAST(VALUE1 AS INT), CAST(VALUE2 AS INT) INTO V_ROUND, V_FUNCROUND
    FROM TBLM_COMMONCODEDETAIL
    WHERE COMMONCODE = 'SCM003';

    V_RETURNROWS2 := 0;
    -------- ====== VARIABLE ======

    -------- RECORD RUN_ID --------
    CALL SP_IFRS_RUNNING_LOG(V_CURRDATE, V_SP_NAME, P_RUNID, PG_BACKEND_PID(), CURRENT_DATE);
    -------- RECORD RUN_ID --------

    -------- ====== PRE SIMULATION TABLE ======
    IF P_PRC = 'S' THEN

    END IF;
    -------- ====== PRE SIMULATION TABLE ======

    -------- ====== BODY ======
    CALL SP_IFRS_LOG_AMORT(V_CURRDATE, 'START', 'SP_IFRS_ACCT_SL_UPD_UNAMRT', '');

    -- CLEAN UP
    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'UPDATE ' || V_TABLEINSERT3 || ' A 
        SET 
            UNAMORT_FEE_AMT = 0
            ,UNAMORT_COST_AMT = 0
            ,FAIR_VALUE_AMOUNT = NULL
            ,LOAN_START_AMORTIZATION = NULL
            ,LOAN_END_AMORTIZATION = NULL
        WHERE DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'UPDATE ' || V_TABLENAME || ' A 
        SET 
            --UNAMORT_AMT_TOTAL = 0
            --,UNAMORTIZEDAMOUNT_SL = 0
            UNAMORT_FEE_AMT = 0
            --,UNAMORTIZED_FEE_AMOUNT_SL = 0
            ,UNAMORT_COST_AMT = 0
            --,UNAMORTIZED_COST_AMOUNT_SL = 0
            ,FAIR_VALUE_AMOUNT = NULL
            ,LOAN_START_AMORTIZATION = NULL
            ,LOAN_END_AMORTIZATION = NULL
        WHERE DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);
    
    --GET ACTIVE ECF
    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'TRUNCATE TABLE ' || 'TMP_B1' || '';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || 'TMP_B1' || ' (MASTERID) 
        SELECT DISTINCT MASTERID 
        FROM ' || V_TABLEINSERT2 || ' 
        WHERE AMORTSTOPDATE IS NULL ';
    EXECUTE (V_STR_QUERY);
    
    --GET LAST ACF ID
    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'TRUNCATE TABLE ' || 'TMP_P1' || '';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || 'TMP_P1' || ' (ID) 
        SELECT MAX(ID) ID
        FROM ' || V_TABLEINSERT1 || ' 
        WHERE DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE 
        AND MASTERID IN (
            SELECT MASTERID 
            FROM ' || 'TMP_B1' || ' 
        )
        GROUP BY MASTERID ';
    EXECUTE (V_STR_QUERY);

    -- UPDATE TO MASTER ACCT
    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'UPDATE ' || V_TABLEINSERT3 || ' A 
        SET 
            UNAMORT_FEE_AMT = X.N_UNAMORT_FEE
            ,UNAMORT_COST_AMT = X.N_UNAMORT_COST
            ,FAIR_VALUE_AMOUNT = A.OUTSTANDING + X.N_UNAMORT_FEE + X.N_UNAMORT_COST
            --,FAIR_VALUE_AMOUNT = A.OUTSTANDING_JF + X.N_UNAMORT_FEE + X.N_UNAMORT_COST 
            ,LOAN_START_AMORTIZATION = X.ECFDATE
            ,LOAN_END_AMORTIZATION = X.AMORTENDDATE
            ,AMORT_TYPE = ''SL''
        FROM (	
            SELECT 
                B.DOWNLOAD_DATE
                ,B.MASTERID
                ,B.N_UNAMORT_FEE
                ,B.N_UNAMORT_COST
                ,B.ECFDATE
                ,E.AMORTENDDATE
            FROM ' || V_TABLEINSERT1 || ' B
            JOIN ' || 'TMP_P1' || ' C 
                ON C.ID = B.ID
            LEFT JOIN ' || V_TABLEINSERT2 || ' E 
                ON E.MASTERID = B.MASTERID 
                AND E.PREVDATE = E.PMTDATE 
                AND E.DOWNLOAD_DATE = B.ECFDATE
        ) X 
        WHERE X.MASTERID = A.MASTERID
        AND A.DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'UPDATE ' || V_TABLENAME || ' A 
        SET 
            UNAMORT_FEE_AMT = B.UNAMORT_FEE_AMT
            ,UNAMORT_COST_AMT = B.UNAMORT_COST_AMT
            ,FAIR_VALUE_AMOUNT = B.FAIR_VALUE_AMOUNT
            ,LOAN_START_AMORTIZATION = B.LOAN_START_AMORTIZATION
            ,LOAN_END_AMORTIZATION = B.LOAN_END_AMORTIZATION
            ,AMORT_TYPE = B.AMORT_TYPE
            --20160407 UPDATE TO SL UNAMORT FIELDS
            --,UNAMORTIZEDAMOUNT_SL = B.UNAMORTIZEDAMOUNT
            --,UNAMORTIZED_FEE_AMOUNT_SL = B.UNAMORTIZED_FEE_AMOUNT
            --,UNAMORTIZED_COST_AMOUNT_SL = B.UNAMORTIZED_COST_AMOUNT
        FROM ' || V_TABLEINSERT3 || ' B
        WHERE A.MASTERID = B.MASTERID 
            AND A.DOWNLOAD_DATE = B.DOWNLOAD_DATE 
            AND B.AMORT_TYPE = ''SL''
            --AND B.DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    ---- END
    CALL SP_IFRS_LOG_AMORT(V_CURRDATE, 'END', 'SP_IFRS_ACCT_SL_UPD_UNAMRT', '');

    ---------- ====== BODY ======

END;

$$

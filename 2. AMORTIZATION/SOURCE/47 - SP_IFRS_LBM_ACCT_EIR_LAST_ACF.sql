CREATE OR REPLACE PROCEDURESP_IFRS_LBM_ACCT_EIR_LAST_ACF(IN P_RUNID CHARACTER VARYING DEFAULT 'S_00000_0000'::CHARACTER VARYING, IN P_DOWNLOAD_DATE DATE DEFAULT NULL::DATE, IN P_PRC CHARACTER VARYING DEFAULT 'S'::CHARACTER VARYING)
 LANGUAGE PLPGSQL
AS $$
DECLARE
    ---- DATE
    V_PREVDATE DATE;
    V_CURRDATE DATE;

    ---- QUERY   
    V_STR_QUERY TEXT;

    ---- TABLE LIST       
    V_TABLEINSERT1 VARCHAR(100);
    V_TABLEINSERT2 VARCHAR(100);
    V_TABLEINSERT3 VARCHAR(100);
    V_TABLEINSERT4 VARCHAR(100);

    ---- VARIABLE PROCESS
    V_ROUND INT;
    V_FUNCROUND INT;
    
    ---- CONDITION
    V_RETURNROWS INT;
    V_RETURNROWS2 INT;
    V_TABLEDEST VARCHAR(100);
    V_COLUMNDEST VARCHAR(100);
    V_SPNAME VARCHAR(100);
    V_OPERATION VARCHAR(100);

    ---- RESULT
    V_QUERYS TEXT;

    --- VARIABLE
    V_SP_NAME VARCHAR(100);
    STACK TEXT; 
    FCESIG TEXT;
BEGIN 
    -------- ====== VARIABLE ======
	GET DIAGNOSTICS STACK = PG_CONTEXT;
	FCESIG := substring(STACK from 'function (.*?) line');
	V_SP_NAME := UPPER(LEFT(fcesig::regprocedure::text, POSITION('(' in fcesig::regprocedure::text)-1));

    IF COALESCE(P_PRC, NULL) IS NULL THEN
        P_PRC := 'S';
    END IF;

    IF COALESCE(P_RUNID, NULL) IS NULL THEN
        P_RUNID := 'S_00000_0000';
    END IF;

    IF P_PRC = 'S' THEN 
        V_TABLEINSERT1 := 'IFRS_ACCT_CLOSED_' || P_RUNID || '';
        V_TABLEINSERT2 := 'IFRS_LBM_ACCT_EIR_ACF_' || P_RUNID || '';
        V_TABLEINSERT3 := 'IFRS_LBM_ACCT_EIR_ECF_' || P_RUNID || '';
        V_TABLEINSERT4 := 'IFRS_LBM_ACCT_EIR_ACCRU_PREV_' || P_RUNID || '';
    ELSE 
		V_TABLEINSERT1 := 'IFRS_ACCT_CLOSED';
		V_TABLEINSERT2 := 'IFRS_LBM_ACCT_EIR_ACF';
		V_TABLEINSERT3 := 'IFRS_LBM_ACCT_EIR_ECF';
		V_TABLEINSERT4 := 'IFRS_LBM_ACCT_EIR_ACCRU_PREV';
    END IF;
    
    IF P_DOWNLOAD_DATE IS NULL 
    THEN
        SELECT
            CURRDATE, PREVDATE INTO V_CURRDATE, V_PREVDATE
        FROM
            IFRS_PRC_DATE;
    ELSE        
        V_CURRDATE := P_DOWNLOAD_DATE;
        V_PREVDATE := V_CURRDATE - INTERVAL '1 DAY';
    END IF;

    SELECT CAST(VALUE1 AS INT), CAST(VALUE2 AS INT) INTO V_ROUND, V_FUNCROUND
    FROM TBLM_COMMONCODEDETAIL
    WHERE COMMONCODE = 'SCM003';

    V_RETURNROWS2 := 0;
    -------- ====== VARIABLE ======

    -------- RECORD RUN_ID --------
    CALL SP_IFRS_RUNNING_LOG(V_CURRDATE, V_SP_NAME, P_RUNID, PG_BACKEND_PID(), CURRENT_DATE);
    -------- RECORD RUN_ID --------

    -------- ====== PRE SIMULATION TABLE ======
    IF P_PRC = 'S' THEN
        
    END IF;
    -------- ====== PRE SIMULATION TABLE ======

    -------- ====== BODY ======
    CALL SP_IFRS_LOG_AMORT(V_CURRDATE, 'START', 'SP_IFRS_LBM_ACCT_EIR_LAST_ACF', '');

	V_STR_QUERY := '';
	V_STR_QUERY := V_STR_QUERY || 'TRUNCATE TABLE ' || 'TMP_T1' || '';
	EXECUTE (V_STR_QUERY);

	V_STR_QUERY := '';
	V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || 'TMP_T1' || ' (MASTERID)
		SELECT DISTINCT A.MASTERID
		FROM ' || V_TABLEINSERT1 || ' A
		JOIN ' || V_TABLEINSERT2 || ' B 
			ON B.DOWNLOAD_DATE = ''' || CAST(V_PREVDATE AS VARCHAR(10)) || '''::DATE
			AND B.MASTERID = A.MASTERID
		JOIN ' || V_TABLEINSERT3 || ' C 
			ON C.AMORTSTOPDATE IS NULL
			AND C.MASTERID = A.MASTERID
			AND C.PREV_PMT_DATE = C.PMT_DATE
		WHERE A.DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
	EXECUTE (V_STR_QUERY);

	V_STR_QUERY := '';
	V_STR_QUERY := V_STR_QUERY || 'TRUNCATE TABLE ' || 'TMP_P1' || '';
	EXECUTE (V_STR_QUERY);

	V_STR_QUERY := '';
	V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || 'TMP_P1' || ' (ID) 
		SELECT MAX(ID) ID
		FROM ' || V_TABLEINSERT2 || ' 
		WHERE DOWNLOAD_DATE = ''' || CAST(V_PREVDATE AS VARCHAR(10)) || '''::DATE
		AND MASTERID IN (
			SELECT MASTERID
			FROM ' || 'TMP_T1' || ' 
		)
		GROUP BY MASTERID ';
	EXECUTE (V_STR_QUERY);

	V_STR_QUERY := '';
	V_STR_QUERY := V_STR_QUERY || 'UPDATE ' || V_TABLEINSERT4 || ' A 
		SET 
			STATUS = TO_CHAR(''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE, ''YYYYMMDD'')
			,CREATEDBY = ''EIR_LAST_ACF''
		WHERE STATUS = ''ACT''
		AND MASTERID IN (
			SELECT MASTERID
			FROM ' || 'TMP_T1' || ' 
		) ';
	EXECUTE (V_STR_QUERY);

	V_STR_QUERY := '';
	V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || V_TABLEINSERT2 || ' 
		(
			DOWNLOAD_DATE
			,FACNO
			,CIFNO
			,ACCTNO
			,DATASOURCE
			,ECFDATE
			,MASTERID
			,BRANCH
			,N_UNAMORT_FEE
			,N_AMORT_FEE
			,N_ACCRU_FEE
			,N_ACCRUFULL_FEE
			,N_UNAMORT_COST
			,N_AMORT_COST
			,N_ACCRU_COST
			,N_ACCRUFULL_COST
			,N_ACCRU_PREV_FEE
			,N_ACCRU_PREV_COST
			,DO_AMORT
			,CREATEDDATE
			,CREATEDBY
		) SELECT 
			''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE
			,FACNO
			,CIFNO
			,ACCTNO
			,DATASOURCE
			,ECFDATE
			,MASTERID
			,BRANCH
			,0
			,N_AMORT_FEE + N_UNAMORT_FEE
			,CASE 
				WHEN DO_AMORT = ''Y''
				THEN N_AMORT_FEE - N_UNAMORT_FEE
				ELSE - N_UNAMORT_FEE + N_ACCRU_FEE
			END
			,CASE 
				WHEN DO_AMORT = ''Y''
				THEN N_AMORT_FEE - N_UNAMORT_FEE
				ELSE - N_UNAMORT_FEE + N_ACCRU_FEE
			END
			,0 AS N_UNAMORT_COST2
			,N_AMORT_COST + N_UNAMORT_COST
			,CASE 
				WHEN DO_AMORT = ''Y''
				THEN N_AMORT_COST - N_UNAMORT_COST
				ELSE - N_UNAMORT_COST + N_ACCRU_COST
			END
			,CASE 
				WHEN DO_AMORT = ''Y''
				THEN N_AMORT_COST - N_UNAMORT_COST
				ELSE - N_UNAMORT_COST + N_ACCRU_COST
			END
			,0
			,0
			,''Y'' AS DO_AMORT2
			,CURRENT_TIMESTAMP CREATEDDATE2
			,''SP_EIR_LAST_ACF'' CREATEDBY2
		FROM ' || V_TABLEINSERT2 || ' 
		WHERE DOWNLOAD_DATE = ''' || CAST(V_PREVDATE AS VARCHAR(10)) || '''::DATE
		AND ID IN (
			SELECT ID
			FROM ' || 'TMP_P1' || ' 
		) ';
	EXECUTE (V_STR_QUERY);

	V_STR_QUERY := '';
	V_STR_QUERY := V_STR_QUERY || 'UPDATE ' || V_TABLEINSERT3 || ' A 
		SET 
			AMORTSTOPDATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE
			,AMORTSTOPMSG = ''CLOSED''
		WHERE MASTERID IN (
			SELECT MASTERID
			FROM ' || 'TMP_T1' || ' 
		)
		AND AMORTSTOPDATE IS NULL ';
	EXECUTE (V_STR_QUERY);

	V_STR_QUERY := '';
	V_STR_QUERY := V_STR_QUERY || 'TRUNCATE TABLE ' || 'TMP_T2' || '';
	EXECUTE (V_STR_QUERY);

	V_STR_QUERY := '';
	V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || 'TMP_T2' || ' (MASTERID) 
		SELECT MASTERID
		FROM ' || V_TABLEINSERT2 || '
		WHERE CASE 
			WHEN (
					N_UNAMORT_FEE > 0
					OR N_UNAMORT_COST < 0
				)
				AND COALESCE(FLAG_AL, ''A'') = ''A''
			THEN 1
			WHEN (
					N_UNAMORT_FEE < 0
					OR N_UNAMORT_COST > 0
				)
				AND COALESCE(FLAG_AL, ''A'') <> ''A''
			THEN 1
			ELSE 0
		END = 1
		AND ACF_CODE = ''2''
		AND DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
	EXECUTE (V_STR_QUERY);

	V_STR_QUERY := '';
	V_STR_QUERY := V_STR_QUERY || 'UPDATE ' || V_TABLEINSERT2 || ' A 
		SET 
			N_UNAMORT_FEE = 0
			,N_AMORT_FEE = N_AMORT_FEE + N_UNAMORT_FEE
			,N_ACCRU_FEE = CASE 
				WHEN DO_AMORT = ''Y''
				THEN N_AMORT_FEE - N_UNAMORT_FEE
				ELSE - N_UNAMORT_FEE + N_ACCRU_FEE
			END
			,N_ACCRUFULL_FEE = CASE 
				WHEN DO_AMORT = ''Y''
				THEN N_AMORT_FEE - N_UNAMORT_FEE
				ELSE - N_UNAMORT_FEE + N_ACCRU_FEE
			END
			,N_UNAMORT_COST = 0
			,N_AMORT_COST = N_AMORT_COST + N_UNAMORT_COST
			,N_ACCRU_COST = CASE 
				WHEN DO_AMORT = ''Y''
				THEN N_AMORT_COST - N_UNAMORT_COST
				ELSE - N_UNAMORT_COST + N_ACCRU_COST
			END
			,N_ACCRUFULL_COST = CASE 
				WHEN DO_AMORT = ''Y''
				THEN N_AMORT_COST - N_UNAMORT_COST
				ELSE - N_UNAMORT_COST + N_ACCRU_COST
			END
			,N_ACCRU_PREV_FEE = 0
			,N_ACCRU_PREV_COST = 0
			,DO_AMORT = ''Y''
			,CREATEDDATE = CURRENT_TIMESTAMP
			,CREATEDBY = ''SP_EIR_LAST_ACF_ABN''
		WHERE CASE 
			WHEN (
					N_UNAMORT_FEE > 0
					OR N_UNAMORT_COST < 0
				)
				AND COALESCE(FLAG_AL, ''A'') = ''A''
			THEN 1
			WHEN (
					N_UNAMORT_FEE < 0
					OR N_UNAMORT_COST > 0
				)
				AND COALESCE(FLAG_AL, ''A'') <> ''A''
			THEN 1
			ELSE 0
		END = 1
		AND ACF_CODE = ''2''
		AND DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
	EXECUTE (V_STR_QUERY);

	V_STR_QUERY := '';
	V_STR_QUERY := V_STR_QUERY || 'UPDATE ' || V_TABLEINSERT3 || ' A 
		SET 
			AMORTSTOPDATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE
			,AMORTSTOPMSG = ''ABN''
		WHERE MASTERID IN (
			SELECT MASTERID
			FROM ' || 'TMP_T2' || ' 
		)
		AND AMORTSTOPDATE IS NULL ';
	EXECUTE (V_STR_QUERY);

	V_STR_QUERY := '';
	V_STR_QUERY := V_STR_QUERY || 'UPDATE ' || V_TABLEINSERT4 || ' A 
		SET 
			STATUS = TO_CHAR(''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE, ''YYYYMMDD'')
			,CREATEDBY = ''EIR_LAST_ACF_ABN''
		WHERE STATUS = ''ACT''
		AND MASTERID IN (
			SELECT MASTERID
			FROM ' || 'TMP_T2' || ' 
		) ';
	EXECUTE (V_STR_QUERY);

	V_STR_QUERY := '';
	V_STR_QUERY := V_STR_QUERY || 'UPDATE ' || V_TABLEINSERT3 || ' A 
		SET 
			AMORTSTOPDATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE
			,AMORTSTOPMSG = ''END''
		WHERE ENDAMORTDATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE
		AND AMORTSTOPDATE IS NULL
	 ';
	EXECUTE (V_STR_QUERY);

    ---- END
    CALL SP_IFRS_LOG_AMORT(V_CURRDATE, 'END', 'SP_IFRS_LBM_ACCT_EIR_LAST_ACF', '');

    RAISE NOTICE 'SP_IFRS_LBM_ACCT_EIR_LAST_ACF | AFFECTED RECORD : %', V_RETURNROWS2;
    ---------- ====== BODY ======

    -------- ====== LOG ======
    V_TABLEDEST = V_TABLEINSERT4;
    V_COLUMNDEST = '-';
    V_SPNAME = 'SP_IFRS_LBM_ACCT_EIR_LAST_ACF';
    V_OPERATION = 'INSERT';
    
    CALL SP_IFRS_EXEC_AND_LOG(V_CURRDATE, V_TABLEDEST, V_COLUMNDEST, V_SPNAME, V_OPERATION, V_RETURNROWS2, P_RUNID);
    -------- ====== LOG ======

    -------- ====== RESULT ======
    V_QUERYS = 'SELECT * FROM ' || V_TABLEINSERT4 || '';
    CALL SP_IFRS_RESULT_PREV(V_CURRDATE, V_QUERYS, V_SPNAME, V_RETURNROWS2, P_RUNID);
    -------- ====== RESULT ======

END;

$$

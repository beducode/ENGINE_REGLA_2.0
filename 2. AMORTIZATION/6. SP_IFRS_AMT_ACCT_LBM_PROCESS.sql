CREATE OR REPLACE SP_IFRS_AMT_ACCT_LBM_PROCESS(IN P_RUNID CHARACTER VARYING DEFAULT 'S_00000_0000'::CHARACTER VARYING, IN P_DOWNLOAD_DATE DATE DEFAULT NULL::DATE, IN P_PRC CHARACTER VARYING DEFAULT 'S'::CHARACTER VARYING)
 LANGUAGE PLPGSQL
AS $$
DECLARE
    ---- DATE
    V_PREVDATE DATE;
    V_CURRDATE DATE;

    ---- QUERY   
    V_STR_QUERY TEXT;

    ---- TABLE LIST       
    V_TABLEINSERT VARCHAR(100);
    V_TABLENAME VARCHAR(100);
    
    ---- CONDITION
    V_RETURNROWS INT;
    V_RETURNROWS2 INT;
    V_TABLEDEST VARCHAR(100);
    V_COLUMNDEST VARCHAR(100);
    V_SPNAME VARCHAR(100);
    V_OPERATION VARCHAR(100);

    ---- RESULT
    V_QUERYS TEXT;

    --- VARIABLE
    V_SP_NAME VARCHAR(100);
    STACK TEXT; 
    FCESIG TEXT;
BEGIN 
    -------- ====== VARIABLE ======
	GET DIAGNOSTICS STACK = PG_CONTEXT;
	FCESIG := SUBSTRING(STACK FROM 'FUNCTION (.*?) LINE');
	V_SP_NAME := UPPER(LEFT(FCESIG::REG::TEXT, POSITION('(' IN FCESIG::REG::TEXT)-1));

    IF COALESCE(P_PRC, NULL) IS NULL THEN
        P_PRC := 'S';
    END IF;

    IF COALESCE(P_RUNID, NULL) IS NULL THEN
        P_RUNID := 'S_00000_0000';
    END IF;
    
    IF P_DOWNLOAD_DATE IS NULL 
    THEN
        SELECT
            CURRDATE, PREVDATE INTO V_CURRDATE, V_PREVDATE
        FROM
            IFRS_PRC_DATE;
    ELSE        
        V_CURRDATE := P_DOWNLOAD_DATE;
        V_PREVDATE := V_CURRDATE - INTERVAL '1 DAY';
    END IF;
    
    V_RETURNROWS2 := 0;
    -------- ====== VARIABLE ======

    -------- RECORD RUN_ID --------
    CALL SP_IFRS_RUNNING_LOG(V_CURRDATE, V_SP_NAME, P_RUNID, PG_BACKEND_PID(), CURRENT_DATE);
    -------- RECORD RUN_ID --------

    -------- ====== BODY ======
    IF P_PRC = 'S' THEN 
        V_TABLENAME := 'TMP_IMA_' || P_RUNID || '';
    ELSE 
        V_TABLENAME := 'IFRS_MASTER_ACCOUNT';
    END IF;

    CALL SP_IFRS_LBM_RESET_AMT_PRC(P_RUNID, V_CURRDATE, P_PRC);
    CALL SP_IFRS_LBM_ACCT_EIR_SWITCH(P_RUNID, V_CURRDATE, P_PRC);
    CALL SP_IFRS_LBM_ACCT_EIR_ACF_PMTDT(P_RUNID, V_CURRDATE, P_PRC);
    CALL SP_LBM_SYNC_PAYM_CORE(P_RUNID, V_CURRDATE, P_PRC);
    CALL SP_IFRS_LBM_ACCT_EIR_ECF_MAIN(P_RUNID, V_CURRDATE, P_PRC);
    CALL SP_IFRS_LBM_STAFF_BENEFIT_SUMM(P_RUNID, V_CURRDATE, P_PRC);
    CALL SP_IFRS_LBM_ACCT_EIR_ACF_ACRU(P_RUNID, V_CURRDATE, P_PRC);
    CALL SP_IFRS_LBM_ACCT_EIR_UPD_ACRU(P_RUNID, V_CURRDATE, P_PRC);
    CALL SP_IFRS_LBM_ACCT_EIR_LAST_ACF(P_RUNID, V_CURRDATE, P_PRC);
    CALL SP_IFRS_LBM_ACCT_EIR_JRNL_INTM(P_RUNID, V_CURRDATE, P_PRC);
    CALL SP_IFRS_LBM_ACCT_EIR_UPD_UNAMRT(P_RUNID, V_CURRDATE, P_PRC);

    V_RETURNROWS2 := 0;

    RAISE NOTICE 'SP_IFRS_AMT_ACCT_LBM_PROCESS | AFFECTED RECORD : %', V_RETURNROWS2;
    ---------- ====== BODY ======

    -------- ====== LOG ======
    V_TABLEDEST = V_TABLENAME;
    V_COLUMNDEST = '-';
    V_SPNAME = 'SP_IFRS_AMT_ACCT_LBM_PROCESS';
    V_OPERATION = 'INSERT';
    
    CALL SP_IFRS_EXEC_AND_LOG(V_CURRDATE, V_TABLEDEST, V_COLUMNDEST, V_SPNAME, V_OPERATION, V_RETURNROWS2, P_RUNID);
    -------- ====== LOG ======

    -------- ====== RESULT ======
    V_QUERYS = 'SELECT * FROM ' || V_TABLENAME || '';
    CALL SP_IFRS_RESULT_PREV(V_CURRDATE, V_QUERYS, V_SPNAME, V_RETURNROWS2, P_RUNID);
    -------- ====== RESULT ======

END;

$$

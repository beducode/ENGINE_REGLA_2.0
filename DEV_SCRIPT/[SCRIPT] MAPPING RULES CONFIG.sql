--------------------------- START PD CONFIG ---------------------------
SELECT * FROM (
SELECT A.SYSCODE_PD_CONFIG,
A.PKID,
A.TM_RULE_NAME,
A.SEGMENT_CODE,
A.SEGMENTATION_ID,
A.PD_METHOD,
A.CALC_METHOD,
A.BUCKET_GROUP,
A.EXPECTED_LIFE,
A.INCREMENT_PERIOD,
A.HISTORICAL_DATA,
A.CUT_OFF_DATE,
CASE WHEN B.IS_ACTIVE = TRUE THEN 1 ELSE 0 END ACTIVE_FLAG,
0 AS IS_DELETE,
'SYSTEM' AS CREATEDBY,
CURRENT_DATE AS CREATEDDATE,
'LOCALHOST' AS CREATEDHOST,
1 AS LAG_1MONTH_FLAG,
'PENDING' AS RUNNING_STATUS FROM (
SELECT A.SYSCODE_PD_CONFIG AS SYSCODE_PD_CONFIG,
MAX(A.PKID) AS PKID,
MAX(A.PD_NAME) AS TM_RULE_NAME,
MAX(B.SYSCODE_SEGMENTATION) AS SEGMENT_CODE,
MAX(C.PKID) AS SEGMENTATION_ID,
MAX(A.PD_METHOD) AS PD_METHOD,
MAX(A.CALCULATION_METHOD) AS CALC_METHOD,
MAX(C.UNIQUE_CODE) AS BUCKET_GROUP,
MAX(A.EXPECTED_LIFETIME) AS EXPECTED_LIFE,
MAX(A.WINDOWS_MOVING) AS INCREMENT_PERIOD,
MAX(A.HISTORICAL_DATA) AS HISTORICAL_DATA,
MAX(A.EFFECTIVE_END_DATE::DATE) AS CUT_OFF_DATE
FROM "PdConfiguration" A
LEFT JOIN "Segmentation" B ON A.SEGMENT_CODE = B.SYSCODE_SEGMENTATION
LEFT JOIN "GroupBucket" C ON A.BUCKET_CODE = C.SYSCODE_GROUP_BUCKET
GROUP BY A.SYSCODE_PD_CONFIG
) A
INNER JOIN "PdConfiguration" B ON A.PKID = B.PKID
) AS IFRS_PD_RULES_CONFIG;
--------------------------- END PD CONFIG ---------------------------

--------------------------- START LGD CONFIG ---------------------------
SELECT * FROM (
SELECT A.SYSCODE_LGD_CONFIG,
A.PKID,
A.DEFAULT_RULE_ID,
A.LGD_RULE_NAME,
A.SEGMENT_CODE,
A.SEGMENTATION_ID,
A.LGD_METHOD,
A.LGW_HISTORICAL_DATA,
A.WORKOUT_PERIOD,
A.MIN_VALUE,
A.MAX_VALUE,
A.CUT_OFF_DATE, 
CASE WHEN B.IS_ACTIVE = TRUE THEN 1 ELSE 0 END ACTIVE_FLAG,
0 AS IS_DELETE,
'SYSTEM' AS CREATEDBY,
CURRENT_DATE AS CREATEDDATE,
'LOCALHOST' AS CREATEDHOST,
1 AS LAG_1MONTH_FLAG,
'PENDING' AS RUNNING_STATUS FROM (
SELECT A.SYSCODE_LGD_CONFIG AS SYSCODE_LGD_CONFIG,
MAX(A.PKID) AS PKID,
MAX(B.PKID) AS DEFAULT_RULE_ID,
MAX(A.LGD_NAME) AS LGD_RULE_NAME,
MAX(C.SYSCODE_SEGMENTATION) AS SEGMENT_CODE,
MAX(C.PKID) AS SEGMENTATION_ID,
MAX(A.LGD_METHOD) AS LGD_METHOD,
MAX(A.HISTORICAL_DATA) AS LGW_HISTORICAL_DATA,
MAX(A.WORKOUT_PERIOD) AS WORKOUT_PERIOD,
MAX(A.LGD_MIN) AS MIN_VALUE,
MAX(A.LGD_MAX) AS MAX_VALUE,
MAX(A.EFFECTIVE_END_DATE::DATE) AS CUT_OFF_DATE
FROM "LgdConfiguration" A
LEFT JOIN "DefaultCriteria" B ON A.DEFAULT_CRITERIA_CODE = B.SYSCODE_DEFAULT_CRITERIA
LEFT JOIN "Segmentation" C ON A.SEGMENT_CODE = C.SYSCODE_SEGMENTATION
GROUP BY A.SYSCODE_LGD_CONFIG
) A
INNER JOIN "LgdConfiguration" B ON A.PKID = B.PKID
) AS IFRS_LGD_RULES_CONFIG;
--------------------------- END LGD CONFIG ---------------------------

--------------------------- START CCF CONFIG ---------------------------
SELECT * FROM (
SELECT A.SYSCODE_CCF_CONFIG,
A.PKID,
A.CCF_RULE_NAME,
A.SEGMENT_CODE,
A.SEGMENTATION_ID,
A.CALC_METHOD,
A.AVERAGE_METHOD,
A.DEFAULT_RULE_ID,
A.CUT_OFF_DATE,
A.CCF_OVERRIDE, 
CASE WHEN B.IS_ACTIVE = TRUE THEN 1 ELSE 0 END ACTIVE_FLAG,
0 AS IS_DELETE,
'SYSTEM' AS CREATEDBY,
CURRENT_DATE AS CREATEDDATE,
'LOCALHOST' AS CREATEDHOST,
1 AS LAG_1MONTH_FLAG,
'PENDING' AS RUNNING_STATUS FROM (
SELECT A.SYSCODE_CCF_CONFIG AS SYSCODE_CCF_CONFIG,
MAX(A.PKID) AS PKID,
MAX(A.CCF_NAME) AS CCF_RULE_NAME,
MAX(B.SYSCODE_SEGMENTATION) AS SEGMENT_CODE,
MAX(B.PKID) AS SEGMENTATION_ID,
MAX(A.CALCULATION_METHOD) AS CALC_METHOD,
MAX(A.METHOD) AS AVERAGE_METHOD,
0 AS DEFAULT_RULE_ID,
MAX(A.EFFECTIVE_END_DATE::DATE) AS CUT_OFF_DATE,
0 AS CCF_OVERRIDE
FROM "CcfConfiguration" A
LEFT JOIN "Segmentation" B ON A.SEGMENT_CODE = B.SYSCODE_SEGMENTATION
GROUP BY A.SYSCODE_CCF_CONFIG) A
INNER JOIN "CcfConfiguration" B ON A.PKID = B.PKID
) AS IFRS_CCF_RULES_CONFIG;
--------------------------- END CCF CONFIG ---------------------------

--------------------------- START EAD CONFIG ---------------------------
SELECT * FROM (
SELECT A.SYSCODE_EAD_CONFIG,
A.PKID,
A.LGD_RULE_NAME,
A.SEGMENT_CODE,
A.SEGMENTATION_ID,
A.EAD_BALANCE,
A.CCF_FLAG,
A.CCF_RULES_ID,
A.PREPAYMENT_FLAG,
A.PREPAYMENT_RULES_ID, 
CASE WHEN B.IS_ACTIVE = TRUE THEN 1 ELSE 0 END ACTIVE_FLAG,
0 AS IS_DELETE,
'SYSTEM' AS CREATEDBY,
CURRENT_DATE AS CREATEDDATE,
'LOCALHOST' AS CREATEDHOST,
1 AS LAG_1MONTH_FLAG,
'PENDING' AS RUNNING_STATUS FROM (
SELECT A.SYSCODE_EAD_CONFIG AS SYSCODE_EAD_CONFIG,
MAX(A.PKID) AS PKID,
MAX(A.EAD_NAME) AS LGD_RULE_NAME,
MAX(B.SYSCODE_SEGMENTATION) AS SEGMENT_CODE,
MAX(B.PKID) AS SEGMENTATION_ID,
MAX(A.BALANCE_SOURCE) AS EAD_BALANCE,
CASE WHEN MAX(C.SYSCODE_CCF_CONFIG) IS NOT NULL THEN 1 ELSE 0 END AS CCF_FLAG,
MAX(C.PKID) AS CCF_RULES_ID,
CASE WHEN MAX(D.SYSCODE_PREPAYMENT_CONFIG) IS NOT NULL THEN 1 ELSE 0 END AS PREPAYMENT_FLAG,
MAX(D.PKID) AS PREPAYMENT_RULES_ID
FROM "EadConfiguration" A
LEFT JOIN "Segmentation" B ON A.SEGMENT_CODE = B.SYSCODE_SEGMENTATION
LEFT JOIN "CcfConfiguration" C ON A.CCF_CODE = C.SYSCODE_CCF_CONFIG
LEFT JOIN "PrepaymentConfiguration" D ON A.PREPAYMENT_CODE = D.SYSCODE_PREPAYMENT_CONFIG
GROUP BY A.SYSCODE_EAD_CONFIG
) A
INNER JOIN "EadConfiguration" B ON A.PKID = B.PKID
) AS IFRS_EAD_RULES_CONFIG;
--------------------------- END EAD CONFIG ---------------------------
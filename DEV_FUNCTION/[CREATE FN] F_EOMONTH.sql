CREATE OR REPLACE FUNCTION F_EOMONTH(
	P_DOWNLOAD_DATE DATE, 
	P_COUNT INT,
	P_OPR VARCHAR(1),
	P_LEVEL VARCHAR(4)
	)
    RETURNS DATE
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
AS $BODY$
DECLARE
V_DATERETURN DATE;
V_STR_QUERY TEXT;
BEGIN	
    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'DROP TABLE IF EXISTS TEMP_GETDATE;';
    EXECUTE (V_STR_QUERY);

	V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE IF NOT EXISTS TEMP_GETDATE (DOWNLOAD_DATE DATE)';
    EXECUTE (V_STR_QUERY);

	IF P_OPR = 'M' THEN
		IF P_LEVEL = 'PREV' THEN
	    V_STR_QUERY := '';
	    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO TEMP_GETDATE
	    SELECT (DATE_TRUNC(''MONTH'',(DATE_TRUNC(''MONTH'', ''' || P_DOWNLOAD_DATE || '''::DATE) + INTERVAL ''1 MONTH - 1 DAY'' - INTERVAL ''' || P_COUNT || ' MONTH'')) + INTERVAL ''1 MONTH - 1 DAY'')::DATE AS DOWNLOAD_DATE';
		ELSE
		V_STR_QUERY := '';
	    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO TEMP_GETDATE
	    SELECT (DATE_TRUNC(''MONTH'',(DATE_TRUNC(''MONTH'', ''' || P_DOWNLOAD_DATE || '''::DATE) + INTERVAL ''1 MONTH - 1 DAY'' + INTERVAL ''' || P_COUNT || ' MONTH'')) + INTERVAL ''1 MONTH - 1 DAY'')::DATE AS DOWNLOAD_DATE';
		END IF;
	ELSEIF P_OPR = 'D' THEN
		IF P_LEVEL = 'PREV' THEN
	    V_STR_QUERY := '';
	    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO TEMP_GETDATE
	    SELECT (''' || P_DOWNLOAD_DATE || '''::DATE - INTERVAL ''' || P_COUNT || ' MONTH'')::DATE AS DOWNLOAD_DATE';
		ELSE
		V_STR_QUERY := '';
	    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO TEMP_GETDATE
	    SELECT (''' || P_DOWNLOAD_DATE || '''::DATE + INTERVAL ''' || P_COUNT || ' MONTH'')::DATE AS DOWNLOAD_DATE';
		END IF;
	ELSE
		IF P_LEVEL = 'PREV' THEN
		V_STR_QUERY := '';
	    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO TEMP_GETDATE
	    SELECT (DATE_TRUNC(''MONTH'',(DATE_TRUNC(''MONTH'', ''' || P_DOWNLOAD_DATE || '''::DATE) + INTERVAL ''1 MONTH - 1 DAY'' - INTERVAL ''' || P_COUNT || ' YEAR'')) + INTERVAL ''1 MONTH - 1 DAY'')::DATE AS DOWNLOAD_DATE';	
		ELSE
		V_STR_QUERY := '';
		V_STR_QUERY := V_STR_QUERY || 'INSERT INTO TEMP_GETDATE
		SELECT (DATE_TRUNC(''MONTH'',(DATE_TRUNC(''MONTH'', ''' || P_DOWNLOAD_DATE || '''::DATE) + INTERVAL ''1 MONTH - 1 DAY'' + INTERVAL ''' || P_COUNT || ' YEAR'')) + INTERVAL ''1 MONTH - 1 DAY'')::DATE AS DOWNLOAD_DATE';	
		END IF;
	END IF;
	EXECUTE (V_STR_QUERY);

	SELECT DOWNLOAD_DATE INTO V_DATERETURN FROM TEMP_GETDATE;

	RETURN V_DATERETURN;
END;
$BODY$;

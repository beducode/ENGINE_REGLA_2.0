DROP VIEW IF EXISTS VW_MSTR_SEGMENT_RULES_HEADER;

CREATE VIEW VW_MSTR_SEGMENT_RULES_HEADER 
AS
SELECT * FROM dblink('workflow_ntt_impairment','SELECT (SELECT E.PKID FROM "Segmentation" E WHERE E.LEVEL = 0 AND A.PARENT_CODE_LEVEL_0 = E.SYSCODE_SEGMENTATION) AS PKID,
(SELECT UPPER(B.SEGMENT_NAME) FROM "Segmentation" B WHERE B.LEVEL = 0 AND A.PARENT_CODE_LEVEL_0 = B.SYSCODE_SEGMENTATION) AS GROUP_SEGMENT,
(SELECT UPPER(C.SEGMENT_NAME) FROM "Segmentation" C WHERE C.LEVEL = 1 AND A.PARENT_CODE_LEVEL_1 = C.SYSCODE_SEGMENTATION) AS SEGMENT,
UPPER(A.SEGMENT_NAME) AS SUB_SEGMENT,
CASE WHEN A.IS_ACTIVE = TRUE THEN 1 ELSE 0 END ACTIVE_FLAG, 
COALESCE(A.SEGMENT_TYPE,''PORTFOLIO_SEGMENT'') AS SEGMENT_TYPE, 
(SELECT D.LEVEL FROM "Segmentation" D WHERE A.PARENT_CODE_LEVEL_1 = D.SYSCODE_SEGMENTATION) AS SEQUENCE,
1 AS IS_NEW,
CASE WHEN A.IS_ACTIVE = TRUE THEN 0 ELSE 1 END IS_DELETE,
''SYSTEM'' AS CREATEDBY,
CURRENT_DATE AS CREATEDDATE,
''LOCALHOST'' AS CREATEDHOST
FROM "Segmentation" A
WHERE LEVEL = 2') AS MSTR_SEGMENT_RULES_HEADER(PKID BIGINT
,GROUP_SEGMENT VARCHAR(50)
,SEGMENT VARCHAR(50)
,SUB_SEGMENT VARCHAR(60)
,ACTIVE_FLAG INT
,SEGMENT_TYPE VARCHAR(50)
,SEQUENCE INT
,IS_NEW INT
,IS_DELETE INT
,CREATEDBY CHARACTER VARYING(36)
,CREATEDDATE TIMESTAMP WITHOUT TIME ZONE
,CREATEDHOST CHARACTER VARYING(30));
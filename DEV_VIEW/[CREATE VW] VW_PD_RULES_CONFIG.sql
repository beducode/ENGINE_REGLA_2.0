DROP VIEW IF EXISTS VW_PD_RULES_CONFIG;

CREATE VIEW VW_PD_RULES_CONFIG AS
SELECT * FROM dblink('workflow_ntt_impairment','
SELECT * FROM (
SELECT A.PKID,
A.TM_RULE_NAME,
A.SEGMENTATION_ID,
A.PD_METHOD,
A.CALC_METHOD,
A.BUCKET_GROUP,
A.EXPECTED_LIFE,
A.INCREMENT_PERIOD,
A.HISTORICAL_DATA,
A.CUT_OFF_DATE,
CASE WHEN B.IS_ACTIVE = TRUE THEN 1 ELSE 0 END ACTIVE_FLAG,
0 AS IS_DELETE,
''SYSTEM'' AS CREATEDBY,
CURRENT_DATE AS CREATEDDATE,
''LOCALHOST'' AS CREATEDHOST,
1 AS LAG_1MONTH_FLAG,
''PENDING'' AS RUNNING_STATUS FROM (
SELECT A.SYSCODE_PD_CONFIG AS SYSCODE_PD_CONFIG,
MAX(A.PKID) AS PKID,
MAX(A.PD_NAME) AS TM_RULE_NAME,
MAX(B.SYSCODE_SEGMENTATION) AS SEGMENT_CODE,
MAX(B.PKID) AS SEGMENTATION_ID,
CASE WHEN MAX(A.PD_METHOD) = ''MAA'' THEN ''MAA'' ELSE ''CHR'' END AS PD_METHOD,
MAX(A.CALCULATION_METHOD) AS CALC_METHOD,
MAX(C.UNIQUE_CODE) AS BUCKET_GROUP,
MAX(A.EXPECTED_LIFETIME) AS EXPECTED_LIFE,
MAX(A.WINDOWS_MOVING) AS INCREMENT_PERIOD,
MAX(A.HISTORICAL_DATA) AS HISTORICAL_DATA,
MAX(A.EFFECTIVE_END_DATE::DATE) AS CUT_OFF_DATE
FROM "PdConfiguration" A
LEFT JOIN "Segmentation" B ON A.SEGMENT_CODE = B.SYSCODE_SEGMENTATION
LEFT JOIN "GroupBucket" C ON A.BUCKET_CODE = C.SYSCODE_GROUP_BUCKET
GROUP BY A.SYSCODE_PD_CONFIG
) A
INNER JOIN "PdConfiguration" B ON A.PKID = B.PKID
WHERE B.IS_ACTIVE = TRUE
) AS IFRS_PD_RULES_CONFIG') AS PD_RULES_CONFIG(PKID BIGINT
,TM_RULE_NAME CHARACTER VARYING(250)
,SEGMENTATION_ID BIGINT
,PD_METHOD CHARACTER VARYING(50)
,CALC_METHOD CHARACTER VARYING(20)
,BUCKET_GROUP CHARACTER VARYING(30)
,EXPECTED_LIFE SMALLINT
,INCREMENT_PERIOD SMALLINT
,HISTORICAL_DATA SMALLINT
,CUT_OFF_DATE DATE
,ACTIVE_FLAG INTEGER
,IS_DELETE INTEGER
,CREATEDBY CHARACTER VARYING(36)
,CREATEDDATE TIMESTAMP WITHOUT TIME ZONE
,CREATEDHOST CHARACTER VARYING(30)
,LAG_1MONTH_FLAG INTEGER
,RUNNING_STATUS CHARACTER VARYING(20));
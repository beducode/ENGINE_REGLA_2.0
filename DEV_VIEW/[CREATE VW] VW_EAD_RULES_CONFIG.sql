DROP VIEW IF EXISTS VW_EAD_RULES_CONFIG;

CREATE VIEW VW_EAD_RULES_CONFIG AS
SELECT * FROM dblink('workflow_ntt_impairment','SELECT * FROM (
SELECT A.PKID,
UPPER(A.EAD_RULE_NAME) AS EAD_RULE_NAME,
A.SEGMENTATION_ID,
CASE 
	WHEN A.ACCRUED_INTEREST = 1 AND CCF_FLAG = 0 THEN UPPER(EAD_BALANCE) || ''+'' || ''ACCRUED_INTEREST'' ----- "OUTSTANDING+INTEREST_ACCRUED"
	WHEN A.ACCRUED_INTEREST = 0 AND CCF_FLAG = 1 THEN ''('' || UPPER(EAD_BALANCE) || ''*CCF'' || '')'' ----- "(OUTSTANDING*CCF)"
	WHEN A.ACCRUED_INTEREST = 1 AND CCF_FLAG = 1 THEN ''(('' || UPPER(EAD_BALANCE) || ''+'' || ''ACCRUED_INTEREST'' || '')'' || ''*CCF'' || '')'' ----- ((OUTSTANDING-INTEREST_ACCRUED)*CCF)
	ELSE UPPER(A.EAD_BALANCE) END 
AS EAD_BALANCE,
A.CCF_FLAG,
A.CCF_RULES_ID,
A.PREPAYMENT_FLAG,
A.PREPAYMENT_RULES_ID, 
CASE WHEN B.IS_ACTIVE = TRUE THEN 1 ELSE 0 END ACTIVE_FLAG,
0 AS IS_DELETE,
''SYSTEM'' AS CREATEDBY,
CURRENT_DATE AS CREATEDDATE,
''LOCALHOST'' AS CREATEDHOST FROM (
SELECT A.SYSCODE_EAD_CONFIG AS SYSCODE_EAD_CONFIG,
MAX(A.PKID) AS PKID,
MAX(A.EAD_NAME) AS EAD_RULE_NAME,
MAX(B.SYSCODE_SEGMENTATION) AS SEGMENT_CODE,
MAX(B.PKID) AS SEGMENTATION_ID,
MAX(A.BALANCE_SOURCE) AS EAD_BALANCE,
MAX(CASE WHEN INCLUDE_ACCRUED_INTEREST = TRUE THEN 1 ELSE 0 END) AS ACCRUED_INTEREST,
MAX(CASE WHEN INCLUDE_UNAMORTIZED_FEE_COST = TRUE THEN 1 ELSE 0 END) AS UNAMORTIZED_FEE_COST,
MAX(CASE WHEN INCLUDE_MARKET_VALUE = TRUE THEN 1 ELSE 0 END) AS MARKET_VALUE,
MAX(CASE WHEN INCLUDE_UNAMORTIZED_DISCOUNT_PREMIUM = TRUE THEN 1 ELSE 0 END) AS UNAMORTIZED_DISCOUNT_PREMIUM,
MAX(CASE WHEN IS_REVOLVING = TRUE THEN 1 ELSE 0 END) AS REVOLVING,
MAX(CASE WHEN IS_COMMITMENT = TRUE THEN 1 ELSE 0 END) AS COMMITMENT,
CASE WHEN MAX(C.SYSCODE_CCF_CONFIG) IS NOT NULL THEN 1 ELSE 0 END AS CCF_FLAG,
MAX(C.PKID) AS CCF_RULES_ID,
CASE WHEN MAX(D.SYSCODE_PREPAYMENT_CONFIG) IS NOT NULL THEN 1 ELSE 0 END AS PREPAYMENT_FLAG,
MAX(D.PKID) AS PREPAYMENT_RULES_ID
FROM "EadConfiguration" A
LEFT JOIN "Segmentation" B ON A.SEGMENT_CODE = B.SYSCODE_SEGMENTATION
LEFT JOIN "CcfConfiguration" C ON A.CCF_CODE = C.SYSCODE_CCF_CONFIG
LEFT JOIN "PrepaymentConfiguration" D ON A.PREPAYMENT_CODE = D.SYSCODE_PREPAYMENT_CONFIG
GROUP BY A.SYSCODE_EAD_CONFIG
) A
INNER JOIN "EadConfiguration" B ON A.PKID = B.PKID
) AS IFRS_EAD_RULES_CONFIG')AS EAD_RULES_CONFIG(PKID BIGINT
,EAD_RULE_NAME CHARACTER VARYING(100)
,SEGMENTATION_ID BIGINT
,EAD_BALANCE CHARACTER VARYING(250)
,CCF_FLAG INTEGER
,CCF_RULES_ID CHARACTER VARYING(100)
,PREPAYMENT_FLAG INTEGER
,PREPAYMENT_RULES_ID CHARACTER VARYING(100)
,ACTIVE_FLAG INTEGER
,IS_DELETE INTEGER
,CREATEDBY CHARACTER VARYING(36)
,CREATEDDATE TIMESTAMP WITHOUT TIME ZONE
,CREATEDHOST CHARACTER VARYING(30));
DROP VIEW IF EXISTS VW_DATA_RETENTION_POLICY;

CREATE VIEW VW_DATA_RETENTION_POLICY AS
SELECT * FROM dblink('workflow_ntt_parameter','WITH CTE_RET AS (
SELECT A.PKID
, A.SYSCODE_POLICY_CONFIGURATION AS RETENTION_ID
, A.CONNECTION_STRING_PKID AS CONNECTION_ID
,(SELECT B.TABLE_NAME FROM "MstTableName" B WHERE B.PKID = A.SOURCE_TABLE_PKID) AS TABLE_SOURCE
,(SELECT B.TABLE_NAME FROM "MstTableName" B WHERE B.PKID = A.DESTINATION_TABLE_PKID) AS TABLE_DESTINATION
, A.EFFECTIVE_START_DATE::DATE AS START_DATE
, A.EFFECTIVE_END_DATE::DATE AS END_DATE
, A.SEQUENCE
, (SELECT C.CONNECTION_STRING_NAME FROM "MstConnectionString" C WHERE C.PKID = A.CONNECTION_STRING_PKID) AS CONNECTION_KEY
FROM "DataRetentionPolicy" A
WHERE A.IS_ACTIVE = TRUE)

SELECT B.PKID
, B.RETENTION_ID
, B.CONNECTION_ID
, B.TABLE_SOURCE
, B.TABLE_DESTINATION
, B.START_DATE
, B.END_DATE
, B.SEQUENCE
, REVERSE_OPERATORS(REPLACE(A.SQL_CONDITIONS,B.TABLE_SOURCE || ''.'','''')) AS TABLE_CONDITION_RESULT
, REVERSE_OPERATORS(REPLACE(REPLACE(A.SQL_CONDITIONS,B.TABLE_SOURCE || ''.'',''''), '''''''', '''''''''''')) AS TABLE_CONDITION
, B.CONNECTION_KEY
FROM "DataRetentionPolicy" A
INNER JOIN CTE_RET B ON A.PKID = B.PKID
ORDER BY B.SEQUENCE ASC') AS CCF_RULES_CONFIG(PKID BIGINT,
RETENTION_ID VARCHAR(50),
CONNECTION_ID BIGINT, 
TABLE_SOURCE VARCHAR(100), 
TABLE_DESTINATION VARCHAR(100), 
START_DATE DATE,
END_DATE DATE,
SEQUENCE SMALLINT, 
TABLE_CONDITION_RESULT TEXT,
TABLE_CONDITION TEXT,
CONNECTION_KEY TEXT)